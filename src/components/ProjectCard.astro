---
interface Props {
  project: {
    title: string;
    description: string;
    image: string;
    tags: string[];
    link?: string;
    github?: string;
    duration?: string;
    role?: string;
    results?: string;
    featured?: boolean;
    category?: string;
  };
  index: number;
  layout: 'grid' | 'carousel' | 'list';
  animationType?: 'fade' | 'slide' | 'zoom';
  class?: string;
}

const { 
  project, 
  index, 
  layout = 'grid',
  animationType = 'fade',
  class: className = ''
} = Astro.props;

// Configuración de animaciones
const animations = {
  fade: {
    initial: 'opacity: 0; transform: translateY(30px);',
    animate: 'fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) forwards',
  },
  slide: {
    initial: 'opacity: 0; transform: translateX(-30px);',
    animate: 'slideInRight 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) forwards',
  },
  zoom: {
    initial: 'opacity: 0; transform: scale(0.95);',
    animate: 'zoomIn 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) forwards',
  }
};

const selectedAnimation = animations[animationType];

// Colores y estilos
const accentColor = 'lime-400'; // Futuristic lime green accent color
const gradients = [
  'from-zinc-900/80 via-zinc-900/40 to-transparent',
  'from-zinc-900/80 via-zinc-900/40 to-transparent',
  'from-zinc-900/80 via-zinc-900/40 to-transparent',
];
---

<article
  class={`
    group relative bg-white dark:bg-gray-900 rounded-xl overflow-hidden
    hover:shadow-xl hover:shadow-${accentColor}/20 dark:hover:shadow-${accentColor}/10
    transition-all duration-500 ease-out
    ${layout === 'carousel' ? 'w-96 flex-shrink-0 snap-center' : ''}
    ${layout === 'list' ? 'flex flex-col md:flex-row gap-8' : ''}
    project-card
    ${className}
  `}
  style={`${selectedAnimation.initial} animation-delay: ${index * 100}ms;`}
  data-tags={project.tags.join(',')}
  data-category={project.category || 'Sin categoría'}
  data-featured={project.featured ? 'true' : 'false'}
>
  <div class={`relative ${layout === 'list' ? 'md:w-2/5' : 'w-full'} ${layout !== 'list' ? 'pt-[60%]' : ''}`}>
    <a href={project.github || project.link || '#'}
       target="_blank"
       rel="noopener noreferrer"
       class="absolute inset-0 overflow-hidden">
      <img
        src={project.image}
        alt={project.title}
        class="absolute inset-0 w-full h-full object-cover filter saturate-[0.95] brightness-[1.02]
               transform group-hover:scale-[1.02] transition-all duration-700"
        loading="lazy"
      />
      <div class={`absolute inset-0 bg-gradient-to-t ${gradients[index % gradients.length]}
                  opacity-0 group-hover:opacity-80 transition-opacity duration-500`}>
      </div>
      <div class={`absolute inset-0 bg-gradient-to-b from-transparent to-${accentColor}/10
                  opacity-0 group-hover:opacity-50 transition-opacity duration-500`}>
      </div>
    </a>
    
    <!-- Enlaces rápidos -->
    <div class="absolute top-4 right-4 flex space-x-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
      {project.github && (
        <a href={project.github} target="_blank" rel="noopener noreferrer" 
           class="p-2 bg-gray-900/80 hover:bg-gray-900 rounded-full text-white" 
           aria-label="Ver código en GitHub">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
        </a>
      )}
      {project.link && (
        <a href={project.link} target="_blank" rel="noopener noreferrer" 
           class="p-2 bg-gray-900/80 hover:bg-gray-900 rounded-full text-white" 
           aria-label="Ver proyecto desplegado">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
        </a>
      )}
    </div>
    
    {project.featured && (
      <div class="absolute top-4 left-4 bg-gradient-to-r from-amber-500 to-orange-500 text-white px-3 py-1 rounded-full text-xs font-medium">
        Destacado
      </div>
    )}
  </div>

  <div class={`p-8 relative ${layout === 'list' ? 'md:w-3/5' : ''}`}>
    <h3 class="text-2xl font-semibold mb-3 text-gray-900 dark:text-white tracking-tight
               transform group-hover:translate-x-1 transition-transform duration-300">
      {project.title}
    </h3>
    <p class="text-gray-600 dark:text-gray-300 mb-6 line-clamp-3 leading-relaxed">
      {project.description}
    </p>
    
    <!-- Información adicional opcional -->
    {(project.duration || project.role || project.results) && (
      <div class="mb-6 space-y-2 text-sm text-gray-500 dark:text-gray-400">
        {project.duration && (
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span>{project.duration}</span>
          </div>
        )}
        {project.role && (
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
            <span>{project.role}</span>
          </div>
        )}
        {project.results && (
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            </svg>
            <span>{project.results}</span>
          </div>
        )}
      </div>
    )}
    
    <div class="flex flex-wrap gap-2">
      {project.tags.map(tag => (
        <span class={`px-4 py-1.5 text-sm rounded-full
                   bg-gray-100 dark:bg-gray-800
                   text-gray-700 dark:text-gray-300
                   transition-colors duration-300
                   hover:bg-${accentColor}/20 dark:hover:bg-${accentColor}/70 hover:text-gray-900 dark:hover:text-white`}>
          {tag}
        </span>
      ))}
    </div>
    
    <!-- Botón para expandir (solo visible en móvil) -->
    <button class="mt-6 text-sm font-medium text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white flex items-center gap-1 md:hidden expand-details">
      <span>Ver más detalles</span>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
      </svg>
    </button>
  </div>
</article>

<style>
  article {
    display: flex;
    flex-direction: column;
    height: 100%;
    backdrop-filter: blur(20px);
  }

  .p-8 {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .project-card {
    opacity: 0;
    animation-fill-mode: forwards;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInRight {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes zoomIn {
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  :global(.dark) article {
    background: rgba(17, 17, 17, 0.8);
  }

  :global(.dark) article:hover {
    background: rgba(24, 24, 27, 0.9);
  }
</style>

<script>
  // Expandir detalles en móvil
  document.addEventListener('DOMContentLoaded', () => {
    const expandButtons = document.querySelectorAll('.expand-details');
    
    expandButtons.forEach(button => {
      button.addEventListener('click', () => {
        const card = button.closest('article');
        if (!card) return;
        
        const description = card.querySelector('p');
        if (!description) return;
        
        const buttonText = button.querySelector('span');
        const buttonIcon = button.querySelector('svg');
        
        if (!buttonText || !buttonIcon) return;
        
        if (description.classList.contains('line-clamp-3')) {
          description.classList.remove('line-clamp-3');
          buttonText.textContent = 'Mostrar menos';
          buttonIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />';
        } else {
          description.classList.add('line-clamp-3');
          buttonText.textContent = 'Ver más detalles';
          buttonIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />';
        }
      });
    });
    
    // Aplicar animación según el tipo seleccionado
    const projectCards = document.querySelectorAll('.project-card');
    const animationType = document.querySelector('#projects-container')?.getAttribute('data-animation-type') || 'fade';
    
    projectCards.forEach(card => {
      if (card instanceof HTMLElement) {
        card.style.animation = animationType === 'fade' ? 'fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) forwards' :
                              animationType === 'slide' ? 'slideInRight 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) forwards' :
                              'zoomIn 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) forwards';
      }
    });
  });
</script> 