---
import type { CollectionEntry } from 'astro:content';
import Base from './Base.astro';
import FormattedDate from '../FormattedDate.astro';
import ReadingProgress from '../ui/ReadingProgress.astro';
//import ShareButtons from '../ui/ShareButtons.astro';
import RelatedPosts from '../ui/RelatedPosts.astro';
import AuthorCard from '../ui/AuthorCard.astro';

type Props = CollectionEntry<'blog'>['data'];

// Definir estructura correcta para author
interface Author {
  name: string;
  avatar?: string;
  role?: string;
  bio?: string;
}

const { title, description, pubDate, image, author, tags } = Astro.props;
const accentColor = 'lime-500'; // Color verde para acentos
---

<Base title={title} description={description}>
  <ReadingProgress />
  
  <div class="full-width-override">
    <article class="blog-article">
      <header class="blog-header">
        {image && (
          <div class="blog-hero-image">
            <img 
              src={image.url} 
              alt={title} 
              width="1200"
              height="600"
              loading="eager"
            />
          </div>
        )}
        
        <div class="blog-header-content">
          <div class="blog-meta">
            <FormattedDate date={pubDate} />
            {tags && tags.length > 0 && (
              <div class="blog-tags">
                {tags.map((tag: string) => (
                  <span class="blog-tag">{tag}</span> // Changed from <a> to <span>
                ))}
              </div>
            )}
          </div>
          
          <h1 class="blog-title">{title}</h1>
          
          {description && (
            <p class="blog-description">{description}</p>
          )}
          
          {/* Verificamos que author sea un objeto y lo convertimos si es necesario */}
          {author && (
            <AuthorCard 
              author={typeof author === 'string' 
                ? { name: author } 
                : author as Author} 
            />
          )}
        </div>
      </header>
      
      <div class="blog-content-layout">
        <main class="blog-main">
          <div class="blog-content">
            <slot />
          </div>
          
          <footer class="blog-footer">
            <RelatedPosts tags={tags} currentPostTitle={title} />
          </footer>
        </main>
        
        {/*<aside class="blog-sidebar">
          <div class="blog-sidebar-content">
            <ShareButtons title={title} />
          </div>
        </aside>*/}
      </div>
    </article>
  </div>
</Base>
