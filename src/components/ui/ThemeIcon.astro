---
---
<button 
  id="themeToggle"
  class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-300"
  aria-label="Toggle theme"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    class="w-5 h-5 transition-transform duration-500"
  >
    <path
      class="sun"
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    />
    <path
      class="moon"
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    />
  </svg>
</button>

  <style>
    .sun {
      opacity: 1;
      transform-origin: center;
      transition: opacity 0.3s ease, transform 0.5s ease;
    }
  
    .moon {
      opacity: 0;
      transform-origin: center;
      transition: opacity 0.3s ease, transform 0.5s ease;
    }
  
    :global(.dark) .sun {
      opacity: 0;
      transform: rotate(90deg);
    }
  
    :global(.dark) .moon {
      opacity: 1;
      transform: rotate(0deg);
    }
  </style>
  

  <script>
    document.addEventListener('astro:page-load', () => {
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  // ComprobaciÃ³n de nulidad antes de establecer el tema
  if (theme) {
    window.localStorage.setItem("theme", theme);
  }

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  const themeToggle = document.getElementById("themeToggle");
  if (themeToggle instanceof HTMLElement) {
    themeToggle.onclick = handleToggleClick;
  }
});
  </script>

<script is:inline>
    function applyTheme() {
      localStorage.theme === 'dark'
        ? document.documentElement.classList.add("dark")
        : document.documentElement.classList.remove("dark");
    }
  
    document.addEventListener('astro:after-swap', applyTheme);
    applyTheme();
  </script>


{/* Puedes ayudarme a trabajar en una animacion que 
me gustaria que se vea en el fondo de pantalla cuando se esta en modo oscuro?
la idea es que se vean estrellas */}


