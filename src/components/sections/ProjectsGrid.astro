---
interface Project {
  title: string;
  description: string;
  image: string;
  tags: string[];
  link?: string;
  github?: string;
}

interface Props {
  layout?: 'grid' | 'carousel' | 'list';
  projects?: Project[];
}

const {
  layout = 'grid',
  projects = []
} = Astro.props;

const gradients = [
  'from-zinc-900/80 via-zinc-900/40 to-transparent',
  'from-zinc-900/80 via-zinc-900/40 to-transparent',
  'from-zinc-900/80 via-zinc-900/40 to-transparent',
];

const accentColor = 'lime-400'; // Futuristic lime green accent color
---

<section id="projects" class="py-24">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <h2 class="text-5xl font-bold text-center mb-4 text-gray-900 dark:text-white">
      Featured Projects
    </h2>
    <p class="text-center text-gray-600 dark:text-gray-400 mb-20 max-w-2xl mx-auto text-lg">
      Exploring the intersection of AI, machine learning, and technology innovation
    </p>

    <div class={`
      ${layout === 'grid' ? 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8' : ''}
      ${layout === 'list' ? 'space-y-12' : ''}
      ${layout === 'carousel' ? 'flex overflow-x-auto snap-x snap-mandatory -mx-4 px-4 py-4 space-x-8' : ''}
    `}>
      {projects.map((project, index) => (
        <article
          class={`
            group relative bg-white dark:bg-gray-900 rounded-xl overflow-hidden
            hover:shadow-xl hover:shadow-${accentColor}/20 dark:hover:shadow-${accentColor}/10
            transition-all duration-500 ease-out
            ${layout === 'carousel' ? 'w-96 flex-shrink-0 snap-center' : ''}
            animate-on-scroll
          `}
          style={`animation-delay: ${index * 100}ms`}
        >
          <div class="relative w-full pt-[60%]">
            <a href={project.github || project.link || '#'}
               target="_blank"
               rel="noopener noreferrer"
               class="absolute inset-0 overflow-hidden">
              <img
                src={project.image}
                alt={project.title}
                class="absolute inset-0 w-full h-full object-cover filter saturate-[0.95 brightness-[1.02]
                       transform group-hover:scale-[1.02] transition-all duration-700"
              />
              <div class={`absolute inset-0 bg-gradient-to-t ${gradients[index % gradients.length]}
                          opacity-0 group-hover:opacity-80 transition-opacity duration-500`}>
              </div>
              <div class={`absolute inset-0 bg-gradient-to-b from-transparent to-${accentColor}/10
                          opacity-0 group-hover:opacity-50 transition-opacity duration-500`}>
              </div>
            </a>
          </div>

          <div class="p-8 relative">
            <h3 class="text-2xl font-semibold mb-3 text-gray-900 dark:text-white tracking-tight
                       transform group-hover:translate-x-1 transition-transform duration-300">
              {project.title}
            </h3>
            <p class="text-gray-600 dark:text-gray-300 mb-6 line-clamp-3 leading-relaxed">
              {project.description}
            </p>
            <div class="flex flex-wrap gap-2">
              {project.tags.map(tag => (
                <span class={`px-4 py-1.5 text-sm rounded-full
                           bg-gray-100 dark:bg-gray-800
                           text-gray-700 dark:text-gray-300
                           transition-colors duration-300
                           hover:bg-${accentColor}/20 dark:hover:bg-${accentColor}/70 hover:text-gray-900 dark:hover:text-white`}>
                  {tag}
                </span>
              ))}
            </div>
          </div>
        </article>
      ))}
    </div>
  </div>
</section>

<style>
  article {
    display: flex;
    flex-direction: column;
    height: 100%;
    backdrop-filter: blur(20px);
  }

  .p-8 {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) forwards;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  :global(.dark) article {
    background: rgba(17, 17, 17, 0.8);
  }

  :global(.dark) article:hover {
    background: rgba(24, 24, 27, 0.9);
  }
</style>