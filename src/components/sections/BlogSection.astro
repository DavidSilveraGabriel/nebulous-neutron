---
import { getCollection } from "astro:content";
import FormattedDate from '../FormattedDate.astro';

const allPosts = await getCollection("blog");
const featuredPosts = allPosts.filter(post => post.data.featured);
---

<section class="py-24">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <h2 class="text-4xl md:text-5xl font-bold text-center mb-4 text-gray-900 dark:text-white tracking-tight">
      Featured Blog Posts
    </h2>
    <p class="text-center text-gray-600 dark:text-gray-400 mb-16 max-w-2xl mx-auto text-lg">
      Insights and explorations in technology and innovation
    </p>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {featuredPosts.map((post, index) => (
        <article 
          class="group relative bg-white dark:bg-gray-900 rounded-xl overflow-hidden hover:shadow-2xl hover:shadow-purple-500/10 dark:hover:shadow-purple-500/5 transition-all duration-500"
          style={`animation-delay: ${index * 100}ms`}
        >
          <a href={`/blog/${post.slug}/`} class="block">
            <div class="relative aspect-[16/10] overflow-hidden">
              <img 
                src={post.data.image?.url || '/default-blog-image.jpg'}
                alt={post.data.image?.alt || post.data.title}
                class="object-cover w-full h-full transform group-hover:scale-105 transition-transform duration-700 filter brightness-[0.98]"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
            </div>
            
            <div class="p-8">
              <div class="flex items-center space-x-2 mb-4">
                <time class="text-sm text-gray-500 dark:text-gray-400 font-medium">
                  <FormattedDate date={post.data.pubDate} />
                </time>
                {post.data.category && (
                  <span class="text-sm px-3 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300">
                    {post.data.category}
                  </span>
                )}
              </div>

              <h3 class="text-xl font-semibold mb-3 text-gray-900 dark:text-white group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-300 line-clamp-2">
                {post.data.title}
              </h3>

              {post.data.description && (
                <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-2 leading-relaxed">
                  {post.data.description}
                </p>
              )}

              <div class="flex items-center text-primary-600 dark:text-primary-400 font-medium group-hover:translate-x-1 transition-transform duration-300">
                Read article
                <svg class="w-5 h-5 ml-1" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
              </div>
            </div>
          </a>
        </article>
      ))}
    </div>
  </div>
</section>

<style>
  article {
    animation: fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) forwards;
    opacity: 0;
    transform: translateY(30px);
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  :global(.dark) article {
    background: rgba(17, 17, 17, 0.8);
    backdrop-filter: blur(20px);
  }

  :global(.dark) article:hover {
    background: rgba(24, 24, 27, 0.9);
  }
</style>