[
  {
    "title": "NILES - Multimodal Chatbot with Gemini ü§ñ",
    "description": "NILES is an advanced multimodal chatbot leveraging Gemini models to process both text and images. Built with a modular architecture and a clean interface, NILES delivers an intuitive and powerful chat experience.",
    "image": "/projects_img/cover.png",
    "tags": ["GenAI", "LLMs", "AI bot"],
    "github": "https://github.com/DavidSilveraGabriel/NILES",
    "featured": true,
    "category": "AI Assistants",
    "duration": "3 months",
    "role": "Lead Developer",
    "caseStudy": "NILES was developed as a solution to interact with multimodal AI models in an intuitive and efficient way.",
    "challenge": "The main challenge was to create an interface that would allow users to take full advantage of Gemini's multimodal capabilities, while maintaining a fluid and accessible experience.",
    "solution": "We implemented a modular architecture that clearly separates the user interface from the processing logic, allowing for easy extension and maintenance. The interface was designed with minimalist UX principles to facilitate interaction.",
    "outcome": "The result is a chatbot that allows users to interact with Gemini naturally, combining text and images in their queries and obtaining high-quality contextual responses."
  },
  {
    "title": "üê± MewAI - Feline Agent Crew",
    "description": "MewAI is a multi-agent system powered by crewAI, utilizing 'feline agents' enhanced by Gemini to automate blog content creation. These agents collaborate on tasks involving web research, content drafting, and content review.",
    "image": "/projects_img/mewai.png",
    "tags": ["GenAI", "LLMs", "AI bot","AI Agents","CrewAI"],
    "github": "https://github.com/DavidSilveraGabriel/MewAI",
    "featured": true,
    "category": "AI Agents",
    "duration": "2 months",
    "role": "Agent Architect",
    "caseStudy": "MewAI emerged as an exploration of multi-agent systems for the automated creation of high-quality content.",
    "challenge": "Coordinating multiple specialized agents to work together coherently, each with their own role and responsibilities in the content creation process.",
    "solution": "We used the crewAI framework to orchestrate the agents, assigning specific roles (researcher, writer, editor) and defining clear workflows between them. Each agent was powered by Gemini to enhance its capabilities.",
    "outcome": "The system is capable of generating complete and well-researched blog articles with minimal human intervention, maintaining a consistent tone and editorial quality."
  },
  {
    "title": "Analyze and classify public domain EEG(ML) signals",
    "description": "analyze and classify public domain EEG signals with deep ConvNets for decoding imagined and executed movements",
    "image": "/projects_img/eeg.png",
    "tags": ["Python", "mne", "Pandas", "braindecode", "EEG"],
    "github": "https://github.com/DavidSilveraGabriel/EEG-classification",
    "link": "https://github.com/DavidSilveraGabriel/EEG-classification/blob/master/Using_mne_and_braindecode.ipynb",
    "category": "Machine Learning",
    "duration": "1 month",
    "results": "85% accuracy in classification",
    "caseStudy": "This project explored the application of convolutional neural networks for the classification of EEG signals related to imagined and executed movements.",
    "challenge": "EEG signals are notoriously noisy and variable across subjects, making their classification a complex machine learning problem.",
    "solution": "We implemented a deep convolutional neural network architecture using the braindecode library, specialized in EEG signal processing. We applied advanced preprocessing techniques with mne to improve the quality of the signals.",
    "outcome": "We achieved a classification accuracy of 85%, surpassing traditional methods and demonstrating the potential of deep neural networks for brain-computer interfaces."
  },
  {
    "title": "Data Science Resources",
    "description": "A list of Data Science resources for everyone",
    "image": "https://images.unsplash.com/photo-1666875753105-c63a6f3bdc86?fm=jpg&q=60&w=3000&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8N3x8ZGF0YSUyMHNjaWVuY2V8ZW58MHx8MHx8fDA%3D",
    "tags": ["Data", "Machine Learning"],
    "github": "https://github.com/DavidSilveraGabriel/Data-science-resources",
    "category": "Resources"
  },
  {
    "title": "Computer Pointer Controller",
    "description": "Computer Pointer Controller app estimate pose of head and is used to control the movement of mouse pointer by the direction of eyes.",
    "image": "/projects_img/openvino.png",
    "tags": ["Machine Learning", "Deep Learning", "AI"],
    "github": "https://github.com/DavidSilveraGabriel/Intel--Edge-AI-for-IoT-Developers---Project-3",
    "category": "Computer Vision",
    "caseStudy": "This project explores computer cursor control through eye-tracking and head pose estimation.",
    "challenge": "Implementing an accurate eye-tracking system that works in real-time with limited computational resources.",
    "solution": "We used Intel's OpenVINO toolkit to optimize pre-trained computer vision models, enabling fast inference even on low-end hardware.",
    "outcome": "We created an application that allows controlling the computer cursor with head movements and gaze direction, demonstrating the potential of edge AI for alternative user interfaces."
  },
  {
    "title": "Deploy a People Counter App at the Edge",
    "description": "The app will detect people in a designated area, providing the number of people in the frame, average duration of people in frame, and total count.",
    "image": "/projects_img/nanodegree.png",
    "tags": ["Machine Learning", "Deep Learning", "AI"],
    "github": "https://github.com/DavidSilveraGabriel/Intel--Edge-AI-for-IoT-Developers---Project-1",
    "category": "Computer Vision",
    "caseStudy": "Development of a people counter application for deployment on edge devices.",
    "challenge": "Creating an accurate people counting system that can run on resource-constrained devices in real-time.",
    "solution": "We implemented a people detection model optimized with OpenVINO, along with tracking algorithms to maintain people's identities across frames.",
    "outcome": "The application can accurately count people, calculate their dwell time in the designated area, and provide useful statistics for traffic analysis in commercial or public spaces."
  }
]