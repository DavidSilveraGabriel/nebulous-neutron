---
import Base from '../components/layout/Base.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { supabase } from '../utils/supabaseClient.ts';
import type { PostFrontmatter } from '../utils/types.ts';

const pageTitle = "Blog";
let allPostsData: PostFrontmatter[] = [];

try {
  // Obtener los posts DESDE LA BASE DE DATOS Supabase
  const { data: posts, error } = await supabase
      .from('posts')
      .select('*')
      .order('created_at', { ascending: false }); // Ordenar por fecha de creaci√≥n, m√°s recientes primero

  if (error) {
      console.error("Error al obtener posts de Supabase:", error);
  } else if (posts && posts.length > 0) {
    // Procesar los datos de los posts
    allPostsData = posts.map(post => {
      // Asegurarse de que metadata existe
      const metadata = post.metadata || {};
      
      return {
        ...metadata,
        slug: post.slug || '', // Agregar el slug desde el nivel superior
        title: metadata.title || post.title || 'Sin t√≠tulo',
        description: metadata.description || post.description || '',
        pubDate: metadata.pubDate || post.created_at || new Date().toISOString(),
        image: metadata.image || { 
          url: post.image_url || '/default-blog-image.jpg',
          alt: metadata.title || post.title || 'Imagen del post'
        },
        featured: metadata.featured || post.featured || false,
        category: metadata.category || post.category || ''
      } as PostFrontmatter;
    });
    
    console.log(`Blog: Obtenidos ${allPostsData.length} posts`);
  } else {
    console.log("No se encontraron posts en Supabase");
  }
} catch (e) {
  console.error("Error al procesar los posts:", e);
}
---

<Base title={pageTitle} showProjectForm={false}>
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
        <h1 class="text-4xl font-bold text-center mb-4">Welcome to my blog üßê</h1>
        <p class="text-xl text-gray-600 text-center mb-12">
            Articles about Data Science, Machine Learning/Deep Learning/LLMs and much more... ‚ú®
        </p>

        {allPostsData.length > 0 ? (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {allPostsData.map((post, index) => (
                  <article
                      class="group bg-white dark:bg-gray-800 rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 animate-on-scroll"
                      style={`animation-delay: ${index * 150}ms`}
                  >
                      <a href={`/blog/${post.slug}/`}>
                          <div class="aspect-video relative overflow-hidden rounded-t-xl">
                              <img
                                  src={post.image?.url || '/default-blog-image.jpg'}
                                  alt={post.image?.alt || post.title}
                                  class="object-cover w-full h-auto transform group-hover:scale-110 transition-transform duration-500 ease-in-out"
                              /> 
                               
                              <div class="absolute inset-0 bg-black opacity-0 group-hover:opacity-10 transition-opacity duration-500"></div>
                          </div>

                          <div class="p-6">
                              <div class="text-gray-600 dark:text-gray-400 text-sm mb-2">
                                  <FormattedDate date={post.pubDate ? new Date(post.pubDate) : new Date()} />
                              </div>
                              <h2 class="text-xl font-semibold mb-2 group-hover:text-primary-600 transition-colors">
                                  {post.title}
                              </h2>
                              {post.description && (
                                  <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-2">
                                      {post.description}
                                  </p>
                              )}
                              <div class="inline-flex items-center text-primary-600 hover:text-primary-700">
                                  Read more..
                                  <svg class="w-4 h-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
                                      <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                  </svg>
                              </div>
                          </div>
                      </a>
                  </article>
              ))}
          </div>
        ) : (
          <div class="text-center py-16">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" />
            </svg>
            <h2 class="mt-4 text-xl font-semibold text-gray-700 dark:text-gray-300">No hay art√≠culos disponibles</h2>
            <p class="mt-2 text-gray-500 dark:text-gray-400">Pronto publicaremos nuevo contenido. ¬°Vuelve a visitarnos!</p>
          </div>
        )}
    </main>
</Base>

<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-on-scroll {
    opacity: 0;
    animation: fadeInUp 0.6s ease-out forwards;
  }
</style>

<script>
  // Animaci√≥n al hacer scroll
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const element = entry.target as HTMLElement;
          if (element) {
            element.style.animationPlayState = 'running';
          }
        }
      });
    }, { threshold: 0.1 });

    document.querySelectorAll('.animate-on-scroll').forEach(el => {
      const element = el as HTMLElement;
      if (element) {
        element.style.animationPlayState = 'paused';
      }
      observer.observe(el);
    });
  });
</script>